// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  firstName   String
  lastName    String
  email       String
  password    String
  companyName String
  role        String     @default("admin")
  routes      Route[]
  campaigns   Campaign[]
}

model Route {
  id          String     @id @default(uuid())
  routeId     Int        @default(autoincrement())
  name        String
  product     String
  payout      Float
  description String
  url         String
  method      String
  attributes  Json
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  campaigns   Campaign[]
}

model Campaign {
  id              String           @id @default(uuid())
  name            String
  userId          String
  campId          String
  user            User             @relation(fields: [userId], references: [id])
  routeId         String
  route           Route            @relation(fields: [routeId], references: [id])
  status          Status
  campaignSellers CampaignSeller[]
}

model Seller {
  id              String           @id @default(uuid())
  name            String
  apiKey          String
  campaignSellers CampaignSeller[]
}

model CampaignSeller {
  id         String   @id @default(uuid())
  campaignId String
  sellerId   String
  assignedAt DateTime @default(now())
  campaign   Campaign @relation(fields: [campaignId], references: [id])
  seller     Seller   @relation(fields: [sellerId], references: [id])

  @@unique([campaignId, sellerId])
}

model Lead {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  phone     String
  email     String
  address   String
  status    String
  sub1      String
  sub2      String
  sub3      String
  sub4      String
}

enum Status {
  active
  inactive
}
